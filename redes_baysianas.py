# -*- coding: utf-8 -*-
"""Redes Baysianas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VtBOXBbFHB3WL37P3En__Xo4eScyuglM
"""

!pip install pgmpy

import pandas as pd
import numpy as np
train_data = pd.read_csv("./drive/MyDrive/FATEC/treino.csv") 
test_data = pd.read_csv("./drive/MyDrive/FATEC/teste.csv")
#Devido a recursos limitados, a base de treino será de apenas 500 registros 
train_data = train_data.head(500)
test_data = test_data.head(10)
data = test_data.copy()
data.drop('TargetClass', axis=1, inplace=True)

from pgmpy.models import BayesianModel
from pgmpy.estimators import MaximumLikelihoodEstimator
from pgmpy.inference import VariableElimination

# Criando o modelo bayesiano
model = BayesianModel([('Vmag', 'TargetClass'), ('B-V', 'TargetClass'), ('Amag', 'TargetClass')])

# Estimando os parâmetros usando Maximum Likelihood Estimation
model.fit(train_data)

model.check_model()

x = []
for index, row in data.iterrows():
    conversaoNp = data.iloc[index].to_numpy()
    temp_df = pd.DataFrame(conversaoNp.reshape(1, -1), columns=data.columns)
    temp = model.predict(temp_df.round().astype(int))
    x.append(temp['TargetClass'])

predicted_data = pd.DataFrame({'TargetClass': x})
accuracy = (test_data['TargetClass'] == predicted_data['TargetClass']).mean()
print(accuracy)